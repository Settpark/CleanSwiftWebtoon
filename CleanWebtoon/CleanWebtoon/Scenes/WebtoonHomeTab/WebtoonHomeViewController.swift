//
//  WebtoonHomeViewController.swift
//  CleanWebtoon
//
//  Created by temp_name on 2023/06/21.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WebtoonHomeDisplayLogic: AnyObject
{
    func displayWebtoonList(viewModels: [WebtoonHome.WebtoonList.ViewModel])
}

class WebtoonHomeViewController: UIViewController, WebtoonHomeDisplayLogic {
    var interactor: WebtoonHomeBusinessLogic?
    var router: (NSObjectProtocol & WebtoonHomeRoutingLogic & WebtoonHomeDataPassing)?
    
    private let topEventScrollView: UIScrollView
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        topEventScrollView = {
            let scrollView = UIScrollView()
            scrollView.translatesAutoresizingMaskIntoConstraints = false
            return scrollView
        }()
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
        setupViews()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = WebtoonHomeInteractor()
        let presenter = WebtoonHomePresenter()
        let router = WebtoonHomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchAllWebtoonCollection()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    private func setupViews() {
        title = "웹툰"
        tabBarItem = UITabBarItem(title: "웹툰", image: UIImage(systemName: "house"), selectedImage: UIImage(systemName: "house.fill"))
        view.backgroundColor = .white
        
        view.addSubview(topEventScrollView)
        
        NSLayoutConstraint.activate([
            topEventScrollView.topAnchor.constraint(equalTo: self.view.topAnchor),
            topEventScrollView.leadingAnchor.constraint(equalTo: self.view.leadingAnchor),
            topEventScrollView.trailingAnchor.constraint(equalTo: self.view.trailingAnchor),
            topEventScrollView.heightAnchor.constraint(equalToConstant: 300),
        ])
    }
    
    func fetchAllWebtoonCollection() {
        interactor?.fetchWebtoons()
    }
    
    func displayWebtoonList(viewModels: [WebtoonHome.WebtoonList.ViewModel]) {
        viewModels.forEach { print($0.title) }
    }
}
