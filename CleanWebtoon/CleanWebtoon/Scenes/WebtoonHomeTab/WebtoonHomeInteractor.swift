//
//  WebtoonHomeInteractor.swift
//  CleanWebtoon
//
//  Created by temp_name on 2023/06/21.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WebtoonHomeBusinessLogic {
    func fetchSpecificDayWebtoons(option: WebtoonHome.WebtoonList.Request)
    func fetchRecommandWebtoons()
    func moveToSpecificdayWebtoonlist(updateday: UpdateDay?)
}

protocol WebtoonHomeDataStore {
    //var name: String { get set }
}

class WebtoonHomeInteractor: WebtoonHomeBusinessLogic, WebtoonHomeDataStore {
    
    var presenter: WebtoonHomePresentationLogic?
    private var worker: WebtoonHomeWorker
    
    init() {
        worker = WebtoonHomeWorker(service: WebtoonsAPI())
    }
    
    func fetchSpecificDayWebtoons(option: WebtoonHome.WebtoonList.Request) {
        var updateDay: UpdateDay = .naverDaily
        if let validUpdateDay = option.updateDay {
            updateDay = validUpdateDay
        } else {
            updateDay = Date.makeTodayWeekday()
        }
        worker.fetchSpecificDayWebtoons(updateDay: updateDay) { [weak self] response in
            guard let self = self else { return }
            self.presenter?.presentWebtoonList(response: response, updateDay: updateDay)
        }
    }
    
    func fetchRecommandWebtoons() {
        worker.fetchRecommandWebtoons { [weak self] response in
            guard let self = self else { return }
            self.presenter?.presentRecommandWebtoons(response: response)
        }
    }
    
    func moveToSpecificdayWebtoonlist(updateday: UpdateDay? = nil) {
        var updateDayToInt: CGFloat = -1
        let decisionValue: CGFloat = makeUpdatedayToInt(updateDay: updateday)
        if decisionValue == -1 {
            updateDayToInt = makeUpdatedayToInt(updateDay: Date.makeTodayWeekday())
        } else {
            updateDayToInt = decisionValue
        }
        presenter?.presentSpecificDayWebtoons(offset: updateDayToInt)
    }
    
    private func makeUpdatedayToInt(updateDay: UpdateDay?) -> CGFloat {
        guard let updateDay = updateDay else {
            return -1
        }
        switch updateDay {
        case .naverDaily:
            return 0
        case .mon:
            return 1
        case .tue:
            return 2
        case .wed:
            return 3
        case .thu:
            return 4
        case .fri:
            return 5
        case .sat:
            return 6
        case .sun:
            return 7
        case .finished:
            return 8
        }
    }
}
