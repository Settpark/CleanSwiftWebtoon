//
//  WebtoonHomeInteractorTests.swift
//  CleanWebtoon
//
//  Created by temp_name on 2023/08/30.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import XCTest
import WebtoonHome

class WebtoonHomeWebtoonListInteractorTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: WebtoonHomeWebtoonListInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupWebtoonHomeInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupWebtoonHomeInteractor() {
        let workerStub: WebtoonHomeWebtoonListWorkerSpy = WebtoonHomeWebtoonListWorkerSpy()
        sut = WebtoonHomeWebtoonListInteractor(worker: workerStub)
    }
    
    // MARK: Test doubles
    
    class WebtoonHomeWebtoonListPresentationLogicSpy: WebtoonHomeWebtoonListPresentationLogic {
        var isPresentWebtoonListMethodCalling: Bool = false
        
        func presentWebtoons(response: WebtoonHome.WebtoonHomeWebtoonList.WebtoonModels.Response) {
            isPresentWebtoonListMethodCalling = true
        }
    }
    
    class WebtoonHomeWebtoonListWorkerSpy: WebtoonListWorker {
        var isWorkerMethodCalling: Bool = false
        func requestWetoons(request: WebtoonHome.WebtoonHomeWebtoonList.WebtoonModels.Request,
                            completion: @escaping (WebtoonHome.WebtoonHomeWebtoonList.WebtoonModels.Response) -> (Void)) {
            isWorkerMethodCalling = true
            let responseDummy: WebtoonHomeWebtoonList.WebtoonModels.Response = .init()
            completion(responseDummy)
        }
    }
    
    // MARK: Tests
    
    func test_인터렉터가_프레젠테이션_함수를_잘_호출하는가() {
        // Given
        let presentationSpy = WebtoonHomeWebtoonListPresentationLogicSpy()
        sut.presenter = presentationSpy
        let request = WebtoonHomeWebtoonList.WebtoonModels.Request.init(page: 0,
                                                                        perPage: 65536,
                                                                        service: .naver,
                                                                        updateDay: Date.makeTodayWeekday())
        // When
        sut.fetchWebtoonList(request: request)
        // Then
        XCTAssertTrue(presentationSpy.isPresentWebtoonListMethodCalling)
    }
    
    func test_인터렉터가_워커의_함수를_잘_호출하는가() {
        // Given
        let workerStub = WebtoonHomeWebtoonListWorkerSpy()
        sut = WebtoonHomeWebtoonListInteractor(worker: workerStub)
        let request = WebtoonHomeWebtoonList.WebtoonModels.Request.init(page: 0,
                                                                        perPage: 65536,
                                                                        service: .naver,
                                                                        updateDay: Date.makeTodayWeekday())
        // When
        sut.fetchWebtoonList(request: request)
        // Then
        XCTAssertTrue(workerStub.isWorkerMethodCalling)
    }
}
